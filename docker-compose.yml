services:
  recipes:
    container_name: recipes
    build: ./recipes
    volumes:
      - ./recipes/code:/usr/src/app
    networks:
      - msexample
    ports:
      - "3012:3012"
    working_dir: /usr/src/app
    command: bash -c "npm audit && npm install --no-audit && npm run dev"
    restart: always

  articles:
    container_name: articles
    build: ./articles
    volumes:
      - ./articles/code:/usr/src/app
    networks:
      - msexample
    ports:
      - "3011:3011"
    working_dir: /usr/src/app
    command: bash -c "npm audit && npm install --no-audit && npm run dev"
    restart: always

  gateway:
    container_name: apigateway
    build: ./apigateway
    volumes:
      - ./apigateway/code:/usr/src/app
    networks:
      - msexample
      - mygoals
    ports:
      - "3010:3010"
    working_dir: /usr/src/app
    command: bash -c "npm audit && npm install --no-audit && npm run dev"
    environment:
      - PORT=3010
    depends_on:
      - goals

  goals:
    container_name: goals
    build: ./goals
    volumes:
      - ./goals/code:/usr/src/app
    networks:
      - mygoals
    ports:
      - "${GOALS_PORT}:${GOALS_PORT}"
    working_dir: /usr/src/app
    command: bash -c "npm audit && npm install --no-audit && npm run dev"
    environment:
      - GOALS_DB_HOST=mysql-server-goals
      - GOALS_DB_NAME=${GOALS_DB_NAME}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    depends_on:
      - mysql-server-goals
    restart: always

  mysql-server-goals:
    container_name: mysql-server-goals
    image: mysql:8.0
    environment:
      - MYSQL_DATABASE=${GOALS_DB_NAME}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}  # Only root password, no MYSQL_USER
    ports:
      - "3308:3306"  # Map container's 3306 to host's 3309
    volumes:
      - ./goals/mysql/initdb:/docker-entrypoint-initdb.d
      - mysql-data-goals:/var/lib/mysql
    networks:
      - mygoals  # Ensure mysql-server-articles is on the same network as articles

  leafs:
    container_name: leafs
    build: ./leafs
    volumes:
      - ./leafs/code:/usr/src/app
    networks:
      - myLeafs
    ports:
      - "${LEAFS_PORT}:${LEAFS_PORT}"
    working_dir: /usr/src/app
    command: bash -c "npm audit && npm install --no-audit && npm run dev"
    environment:
      - LEAFS_DB_HOST=mysql-server-leafs
      - LEAFS_DB_NAME=${LEAFS_DB_NAME}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    depends_on:
      - mysql-server-leafs
    restart: always

  mysql-server-leafs:
    container_name: mysql-server-leafs
    image: mysql:8.0
    environment:
      - MYSQL_DATABASE=${LEAFS_DB_NAME}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}  # Only root password, no MYSQL_USER
    ports:
      - "3309:3306"  # Map container's 3306 to host's 3309
    volumes:
      - ./leafs/mysql/initdb:/docker-entrypoint-initdb.d
      - mysql-data-leafs:/var/lib/mysql
    networks:
      - myLeafs  # Ensure mysql-server-articles is on the same network as articles

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin:latest
    networks:
      - mygoals
    environment:
      - PMA_HOSTS=mysql-server-goals
      - PMA_USER=${MYSQL_USER}
      - PMA_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "8080:80"

networks:
  msexample:
    driver: bridge
  mygoals:
    driver: bridge
  myLeafs:
    driver: bridge

volumes:
  mysql-data-goals:
  mysql-data-leafs:
